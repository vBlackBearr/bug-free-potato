/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package GUI;

import analizador.Optimizador;
import extraObjects.Cross;
import java.awt.Color;
import java.awt.HeadlessException;
import lenguajee.Analizar;
import java.io.BufferedReader;
import java.io.BufferedWriter;
import java.io.File;
import java.io.FileNotFoundException;
import java.io.FileReader;
import java.io.FileWriter;
import java.io.IOException;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;
import extraObjects.logsAcumulatorInstance;
import extraObjects.textEditorPane;
import extraObjects.typeTableInstance;
import java.awt.BorderLayout;
import java.io.PrintWriter;
import java.util.ArrayList;
import javax.swing.JPanel;
import javax.swing.JScrollPane;
import javax.swing.JTabbedPane;
import javax.swing.JTextArea;

/**
 *
 * @author TeamPotato:)
 */
public class GUI extends javax.swing.JFrame {

    JFileChooser seleccionarCodigo;
    Analizar an = new Analizar();
    public String muestraLexicos = "";
    private ArrayList<String> urlsDeArchivosAbiertos = new ArrayList<>();

    private final String URLFILEVENTANAS = "cache/openedWindows.txt";

    /**
     * Creates new form GUI
     */
    public GUI() {
//        GramaticaTokenManager valores = new GramaticaTokenManager();
        initComponents();
//        NumeroLinea tln = new NumeroLinea(txtArea_Editor);
//        jScroll_Editor.setRowHeaderView(tln);
//        txtArea_Editor.setText("");
        setLocationRelativeTo(null);
        logsAcumulatorInstance.getInstance().setGuiInstance(this);
        
        //Poner en modo pantalla completa
//        this.setExtendedState(MAXIMIZED_BOTH);

        abrirArchivosEnCache();

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        panel_Edicion = new javax.swing.JPanel();
        lbl_Codigo = new javax.swing.JLabel();
        lbl_Escribiendo = new javax.swing.JLabel();
        panel_Respuestas = new javax.swing.JPanel();
        lbl_Respuesta = new javax.swing.JLabel();
        txtTiempoEjecucion = new javax.swing.JLabel();
        jScrollPane_CodOp = new javax.swing.JScrollPane();
        txtCodigoOptimizado = new javax.swing.JTextArea();
        jScrollPane_Semantico = new javax.swing.JScrollPane();
        txtAreaSemantico = new javax.swing.JTextArea();
        jScrollPane_NotPol = new javax.swing.JScrollPane();
        txtAreaNotacionPolaca = new javax.swing.JTextArea();
        jScroll_Lexico = new javax.swing.JScrollPane();
        txtAreaLexico = new javax.swing.JTextArea();
        jScrollPane_Sintactico = new javax.swing.JScrollPane();
        txtAreaSintactico = new javax.swing.JTextArea();
        tabbedPane = new javax.swing.JTabbedPane();
        respuesta_NotPol = new javax.swing.JLabel();
        respuesta_Semantico = new javax.swing.JLabel();
        respuesta_Sintactico = new javax.swing.JLabel();
        respuesta_Lexico = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        respuesta_CodOp = new javax.swing.JLabel();
        respuesta_Lexico1 = new javax.swing.JLabel();
        respuesta_Sintactico1 = new javax.swing.JLabel();
        etiqueta_Fondo = new javax.swing.JLabel();
        menuBar = new javax.swing.JMenuBar();
        fileMenu = new javax.swing.JMenu();
        newMenuItem = new javax.swing.JMenuItem();
        openMenuItem = new javax.swing.JMenuItem();
        saveMenuItem = new javax.swing.JMenuItem();
        saveAsMenuItem = new javax.swing.JMenuItem();
        exitMenuItem = new javax.swing.JMenuItem();
        btnCompilar = new javax.swing.JMenu();
        btnCompilar1 = new javax.swing.JMenu();
        helpMenu = new javax.swing.JMenu();
        jm_Lexico = new javax.swing.JMenuItem();
        jm_Sintactico = new javax.swing.JMenuItem();
        jm_CodInter = new javax.swing.JMenuItem();
        jm_Optimizacion1 = new javax.swing.JMenuItem();
        jm_Semantico = new javax.swing.JMenuItem();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("´Potato: Equipo python");
        setAutoRequestFocus(false);
        setBackground(new java.awt.Color(0, 204, 204));
        setExtendedState(MAXIMIZED_BOTH);
        setMaximumSize(new java.awt.Dimension(1710, 845));
        setPreferredSize(new java.awt.Dimension(1710, 845));
        setResizable(false);
        setSize(new java.awt.Dimension(1710, 845));
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowClosed(java.awt.event.WindowEvent evt) {
                formWindowClosed(evt);
            }
            public void windowClosing(java.awt.event.WindowEvent evt) {
                formWindowClosing(evt);
            }
        });
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        panel_Edicion.setBackground(new java.awt.Color(255, 255, 255));
        panel_Edicion.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(255, 0, 0), 3, true));
        panel_Edicion.setForeground(new java.awt.Color(255, 0, 0));

        lbl_Codigo.setFont(new java.awt.Font("Segoe UI", 1, 15)); // NOI18N
        lbl_Codigo.setText("(Sin Nombre)");

        lbl_Escribiendo.setFont(new java.awt.Font("Microsoft YaHei", 0, 14)); // NOI18N
        lbl_Escribiendo.setText("Escribiendo en:");

        javax.swing.GroupLayout panel_EdicionLayout = new javax.swing.GroupLayout(panel_Edicion);
        panel_Edicion.setLayout(panel_EdicionLayout);
        panel_EdicionLayout.setHorizontalGroup(
            panel_EdicionLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, panel_EdicionLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(lbl_Escribiendo, javax.swing.GroupLayout.PREFERRED_SIZE, 105, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(lbl_Codigo)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        panel_EdicionLayout.setVerticalGroup(
            panel_EdicionLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panel_EdicionLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(panel_EdicionLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lbl_Escribiendo, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(lbl_Codigo))
                .addGap(20, 20, 20))
        );

        getContentPane().add(panel_Edicion, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 10, 310, 40));

        panel_Respuestas.setBackground(new java.awt.Color(255, 255, 255));
        panel_Respuestas.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(255, 0, 51), 3, true));

        lbl_Respuesta.setFont(new java.awt.Font("Microsoft YaHei", 0, 14)); // NOI18N
        lbl_Respuesta.setText("Tiempo de ejecución: ");

        txtTiempoEjecucion.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        txtTiempoEjecucion.setText("Esperando ejecución...");

        javax.swing.GroupLayout panel_RespuestasLayout = new javax.swing.GroupLayout(panel_Respuestas);
        panel_Respuestas.setLayout(panel_RespuestasLayout);
        panel_RespuestasLayout.setHorizontalGroup(
            panel_RespuestasLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, panel_RespuestasLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(lbl_Respuesta)
                .addGap(2, 2, 2)
                .addComponent(txtTiempoEjecucion)
                .addGap(116, 116, 116))
        );
        panel_RespuestasLayout.setVerticalGroup(
            panel_RespuestasLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panel_RespuestasLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(panel_RespuestasLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lbl_Respuesta)
                    .addComponent(txtTiempoEjecucion, javax.swing.GroupLayout.PREFERRED_SIZE, 21, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        getContentPane().add(panel_Respuestas, new org.netbeans.lib.awtextra.AbsoluteConstraints(360, 10, 330, 40));

        jScrollPane_CodOp.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(255, 153, 0), 3));

        txtCodigoOptimizado.setEditable(false);
        txtCodigoOptimizado.setBackground(new java.awt.Color(255, 255, 255));
        txtCodigoOptimizado.setColumns(20);
        txtCodigoOptimizado.setRows(5);
        jScrollPane_CodOp.setViewportView(txtCodigoOptimizado);

        getContentPane().add(jScrollPane_CodOp, new org.netbeans.lib.awtextra.AbsoluteConstraints(1240, 450, 424, 267));

        jScrollPane_Semantico.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(255, 0, 255), 3));

        txtAreaSemantico.setEditable(false);
        txtAreaSemantico.setColumns(20);
        txtAreaSemantico.setRows(5);
        jScrollPane_Semantico.setViewportView(txtAreaSemantico);

        getContentPane().add(jScrollPane_Semantico, new org.netbeans.lib.awtextra.AbsoluteConstraints(750, 520, 467, 200));

        jScrollPane_NotPol.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(255, 255, 0), 3, true));

        txtAreaNotacionPolaca.setEditable(false);
        txtAreaNotacionPolaca.setColumns(20);
        txtAreaNotacionPolaca.setRows(5);
        jScrollPane_NotPol.setViewportView(txtAreaNotacionPolaca);

        getContentPane().add(jScrollPane_NotPol, new org.netbeans.lib.awtextra.AbsoluteConstraints(1240, 130, 424, 267));

        jScroll_Lexico.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0), 3));

        txtAreaLexico.setEditable(false);
        txtAreaLexico.setColumns(20);
        txtAreaLexico.setRows(5);
        jScroll_Lexico.setViewportView(txtAreaLexico);

        getContentPane().add(jScroll_Lexico, new org.netbeans.lib.awtextra.AbsoluteConstraints(750, 80, 467, 182));

        jScrollPane_Sintactico.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(255, 0, 0), 3));

        txtAreaSintactico.setEditable(false);
        txtAreaSintactico.setColumns(20);
        txtAreaSintactico.setRows(5);
        jScrollPane_Sintactico.setViewportView(txtAreaSintactico);

        getContentPane().add(jScrollPane_Sintactico, new org.netbeans.lib.awtextra.AbsoluteConstraints(750, 300, 467, 176));

        tabbedPane.setBackground(new java.awt.Color(255, 255, 255));
        tabbedPane.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        tabbedPane.setName(""); // NOI18N
        getContentPane().add(tabbedPane, new org.netbeans.lib.awtextra.AbsoluteConstraints(50, 90, 640, 610));

        respuesta_NotPol.setFont(new java.awt.Font("Segoe UI", 3, 24)); // NOI18N
        respuesta_NotPol.setForeground(new java.awt.Color(255, 255, 0));
        respuesta_NotPol.setText("Notacion Polaca:");
        getContentPane().add(respuesta_NotPol, new org.netbeans.lib.awtextra.AbsoluteConstraints(1240, 100, 200, -1));

        respuesta_Semantico.setFont(new java.awt.Font("Segoe UI", 3, 24)); // NOI18N
        respuesta_Semantico.setForeground(new java.awt.Color(255, 0, 255));
        respuesta_Semantico.setText("Semantico:");
        getContentPane().add(respuesta_Semantico, new org.netbeans.lib.awtextra.AbsoluteConstraints(750, 490, 150, 21));

        respuesta_Sintactico.setFont(new java.awt.Font("Segoe UI", 3, 24)); // NOI18N
        respuesta_Sintactico.setForeground(new java.awt.Color(255, 0, 0));
        respuesta_Sintactico.setText("Sintactico:");
        getContentPane().add(respuesta_Sintactico, new org.netbeans.lib.awtextra.AbsoluteConstraints(750, 270, 150, -1));

        respuesta_Lexico.setBackground(new java.awt.Color(153, 153, 255));
        respuesta_Lexico.setFont(new java.awt.Font("Segoe UI", 3, 24)); // NOI18N
        respuesta_Lexico.setText("Lexico:");
        getContentPane().add(respuesta_Lexico, new org.netbeans.lib.awtextra.AbsoluteConstraints(750, 50, 90, -1));

        jLabel2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Fondo/Potato.png"))); // NOI18N
        getContentPane().add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(1460, 10, -1, -1));

        respuesta_CodOp.setFont(new java.awt.Font("Segoe UI", 3, 24)); // NOI18N
        respuesta_CodOp.setForeground(new java.awt.Color(255, 153, 0));
        respuesta_CodOp.setText("Codigo Optimizado:");
        getContentPane().add(respuesta_CodOp, new org.netbeans.lib.awtextra.AbsoluteConstraints(1240, 420, 230, -1));

        respuesta_Lexico1.setBackground(new java.awt.Color(153, 153, 255));
        respuesta_Lexico1.setFont(new java.awt.Font("Segoe UI", 3, 18)); // NOI18N
        respuesta_Lexico1.setForeground(new java.awt.Color(153, 153, 255));
        respuesta_Lexico1.setText("Lexico:");
        getContentPane().add(respuesta_Lexico1, new org.netbeans.lib.awtextra.AbsoluteConstraints(750, 60, -1, -1));

        respuesta_Sintactico1.setFont(new java.awt.Font("Segoe UI", 3, 24)); // NOI18N
        respuesta_Sintactico1.setForeground(new java.awt.Color(255, 0, 0));
        respuesta_Sintactico1.setText("Sintactico:");
        getContentPane().add(respuesta_Sintactico1, new org.netbeans.lib.awtextra.AbsoluteConstraints(750, 270, 150, -1));

        etiqueta_Fondo.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Fondo/fondo.png"))); // NOI18N
        getContentPane().add(etiqueta_Fondo, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, -1, -1));

        menuBar.setBackground(new java.awt.Color(0, 0, 255));
        menuBar.setBorder(javax.swing.BorderFactory.createEmptyBorder(1, 1, 1, 1));
        menuBar.setBorderPainted(false);

        fileMenu.setBackground(new java.awt.Color(204, 204, 204));
        fileMenu.setMnemonic('f');
        fileMenu.setText("Archivo");
        fileMenu.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        fileMenu.setMargin(new java.awt.Insets(6, 10, 6, 10));

        newMenuItem.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        newMenuItem.setMnemonic('o');
        newMenuItem.setText("Nuevo");
        newMenuItem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                newMenuItemActionPerformed(evt);
            }
        });
        fileMenu.add(newMenuItem);

        openMenuItem.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        openMenuItem.setMnemonic('o');
        openMenuItem.setText("Abrir");
        openMenuItem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                openMenuItemActionPerformed(evt);
            }
        });
        fileMenu.add(openMenuItem);

        saveMenuItem.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        saveMenuItem.setMnemonic('s');
        saveMenuItem.setText("Guardar");
        saveMenuItem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                saveMenuItemActionPerformed(evt);
            }
        });
        fileMenu.add(saveMenuItem);

        saveAsMenuItem.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        saveAsMenuItem.setMnemonic('a');
        saveAsMenuItem.setText("Guardar Como ...");
        saveAsMenuItem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                saveAsMenuItemActionPerformed(evt);
            }
        });
        fileMenu.add(saveAsMenuItem);

        exitMenuItem.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        exitMenuItem.setMnemonic('x');
        exitMenuItem.setText("Salir");
        exitMenuItem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                exitMenuItemActionPerformed(evt);
            }
        });
        fileMenu.add(exitMenuItem);

        menuBar.add(fileMenu);

        btnCompilar.setMnemonic('e');
        btnCompilar.setText("Compilar");
        btnCompilar.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        btnCompilar.setMargin(new java.awt.Insets(6, 10, 6, 10));
        btnCompilar.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                btnCompilarMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                btnCompilarMouseEntered(evt);
            }
        });
        btnCompilar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCompilarActionPerformed(evt);
            }
        });
        menuBar.add(btnCompilar);

        btnCompilar1.setMnemonic('e');
        btnCompilar1.setText("Optimizar");
        btnCompilar1.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        btnCompilar1.setMargin(new java.awt.Insets(6, 10, 6, 10));
        btnCompilar1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                btnCompilar1MouseClicked(evt);
            }
        });
        btnCompilar1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCompilar1ActionPerformed(evt);
            }
        });
        menuBar.add(btnCompilar1);

        helpMenu.setMnemonic('h');
        helpMenu.setText("Fases Compilacion");
        helpMenu.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        helpMenu.setMargin(new java.awt.Insets(6, 10, 6, 10));

        jm_Lexico.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        jm_Lexico.setMnemonic('c');
        jm_Lexico.setText("Léxico");
        jm_Lexico.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jm_LexicoActionPerformed(evt);
            }
        });
        helpMenu.add(jm_Lexico);

        jm_Sintactico.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        jm_Sintactico.setMnemonic('a');
        jm_Sintactico.setText("Sintactico");
        jm_Sintactico.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jm_SintacticoActionPerformed(evt);
            }
        });
        helpMenu.add(jm_Sintactico);

        jm_CodInter.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        jm_CodInter.setMnemonic('a');
        jm_CodInter.setText("Código intermedio");
        helpMenu.add(jm_CodInter);

        jm_Optimizacion1.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        jm_Optimizacion1.setMnemonic('a');
        jm_Optimizacion1.setText("Optimización");
        jm_Optimizacion1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jm_Optimizacion1ActionPerformed(evt);
            }
        });
        helpMenu.add(jm_Optimizacion1);

        jm_Semantico.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        jm_Semantico.setMnemonic('a');
        jm_Semantico.setText("Semantico");
        jm_Semantico.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jm_SemanticoActionPerformed(evt);
            }
        });
        helpMenu.add(jm_Semantico);

        menuBar.add(helpMenu);

        setJMenuBar(menuBar);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void openMenuItemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_openMenuItemActionPerformed
        // TODO add your handling code here:

        seleccionarCodigo = new JFileChooser();
        seleccionarCodigo.showOpenDialog(null);
        if (seleccionarCodigo.getSelectedFile() != null) {
            File file = seleccionarCodigo.getSelectedFile();
//            selectedFiles.add(file);
//            String contenido = "";
//            try {
//                FileReader fr = new FileReader(file);
//                BufferedReader br = new BufferedReader(fr);
//                String txt;
//                while ((txt = br.readLine()) != null) {
//                    contenido = contenido + txt + "\n";
//                }
//            } catch (Exception ex) {
//                //Logger.getLogger(ManejadorDeArchivos.class.getName()).log(Level.SEVERE, null, ex);
//
//            }
            nuevaPestaña(file);

        }

    }//GEN-LAST:event_openMenuItemActionPerformed

    private void saveMenuItemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_saveMenuItemActionPerformed
        // TODO add your handling code here:
        guardar();
    }//GEN-LAST:event_saveMenuItemActionPerformed

    private void saveAsMenuItemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_saveAsMenuItemActionPerformed
        // TODO add your handling code here:
        guardarComo();
    }//GEN-LAST:event_saveAsMenuItemActionPerformed

    private void exitMenuItemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_exitMenuItemActionPerformed
        System.exit(0);
    }//GEN-LAST:event_exitMenuItemActionPerformed

    private void jm_LexicoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jm_LexicoActionPerformed
        // TODO add your handling code here:
//        if (seleccionarCodigo.getCurrentDirectory() == null) {
//            JOptionPane.showMessageDialog(null, "No hay ningún codigo seleccionado");
//        } else {
//            String ruta = String.valueOf(seleccionarCodigo.getCurrentDirectory()) + "/" + selectedFile.getName();
//            System.out.println(ruta);
//            try {
//                an.AnalizarCodigo(new FileReader(ruta));
//            } catch (FileNotFoundException ex) {
//                JOptionPane.showMessageDialog(null, "Error al leer el archivo");
//            }
//
//        }
    }//GEN-LAST:event_jm_LexicoActionPerformed

    private void jm_SintacticoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jm_SintacticoActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jm_SintacticoActionPerformed

    private void btnCompilarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCompilarActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_btnCompilarActionPerformed

    private void btnCompilarMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnCompilarMouseClicked
        // TODO add your handling code here:
        logsAcumulatorInstance.getInstance().resetLogs();
        typeTableInstance.getInstance().clearTable();
        logsAcumulatorInstance.getInstance().reestablecerNp();
        analisis();
    }//GEN-LAST:event_btnCompilarMouseClicked

    private void jm_SemanticoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jm_SemanticoActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jm_SemanticoActionPerformed

    private void jm_Optimizacion1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jm_Optimizacion1ActionPerformed
        // TODO add your handling code here:
        String text = getTextFromSelectedTab();
        setTextToSelectedTab(Optimizador.Optimizar(text));
    }//GEN-LAST:event_jm_Optimizacion1ActionPerformed

    private void btnCompilar1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnCompilar1MouseClicked
        // TODO add your handling code here:
        String text = getTextFromSelectedTab();
        setTextToSelectedTab(Optimizador.Optimizar(text));
    }//GEN-LAST:event_btnCompilar1MouseClicked

    private void btnCompilar1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCompilar1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_btnCompilar1ActionPerformed

    private void btnCompilarMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnCompilarMouseEntered
        // TODO add your handling code here:
    }//GEN-LAST:event_btnCompilarMouseEntered

    private void formWindowClosed(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowClosed
        // TODO add your handling code here:

    }//GEN-LAST:event_formWindowClosed

    private void formWindowClosing(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowClosing
        // TODO add your handling code here:
        guardarVentanasAbiertas();
//        checarVentanasNoGuardadas();
//        JOptionPane.showMessageDialog(null, "");
    }//GEN-LAST:event_formWindowClosing

    private void newMenuItemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_newMenuItemActionPerformed
        // TODO add your handling code here:
        nuevaPestaña();
    }//GEN-LAST:event_newMenuItemActionPerformed

    public void setTxtAreaLexico(String texto) {
        txtAreaLexico.setText(texto);
    }

    public void setTxtAreaSintactico(String texto) {
        txtAreaSintactico.setText(texto);
    }

    public void setTxtAreaSemantico(String texto) {
        txtAreaSemantico.setText(texto);
    }

    public void setTxtAreaNotacionPolaca(String texto) {
        txtAreaNotacionPolaca.setText(texto);
    }

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(GUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(GUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(GUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(GUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new GUI().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JMenu btnCompilar;
    private javax.swing.JMenu btnCompilar1;
    private javax.swing.JLabel etiqueta_Fondo;
    private javax.swing.JMenuItem exitMenuItem;
    private javax.swing.JMenu fileMenu;
    private javax.swing.JMenu helpMenu;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JScrollPane jScrollPane_CodOp;
    private javax.swing.JScrollPane jScrollPane_NotPol;
    private javax.swing.JScrollPane jScrollPane_Semantico;
    private javax.swing.JScrollPane jScrollPane_Sintactico;
    private javax.swing.JScrollPane jScroll_Lexico;
    private javax.swing.JMenuItem jm_CodInter;
    private javax.swing.JMenuItem jm_Lexico;
    private javax.swing.JMenuItem jm_Optimizacion1;
    private javax.swing.JMenuItem jm_Semantico;
    private javax.swing.JMenuItem jm_Sintactico;
    private javax.swing.JLabel lbl_Codigo;
    private javax.swing.JLabel lbl_Escribiendo;
    private javax.swing.JLabel lbl_Respuesta;
    private javax.swing.JMenuBar menuBar;
    private javax.swing.JMenuItem newMenuItem;
    private javax.swing.JMenuItem openMenuItem;
    private javax.swing.JPanel panel_Edicion;
    private javax.swing.JPanel panel_Respuestas;
    private javax.swing.JLabel respuesta_CodOp;
    private javax.swing.JLabel respuesta_Lexico;
    private javax.swing.JLabel respuesta_Lexico1;
    private javax.swing.JLabel respuesta_NotPol;
    private javax.swing.JLabel respuesta_Semantico;
    private javax.swing.JLabel respuesta_Sintactico;
    private javax.swing.JLabel respuesta_Sintactico1;
    private javax.swing.JMenuItem saveAsMenuItem;
    private javax.swing.JMenuItem saveMenuItem;
    private javax.swing.JTabbedPane tabbedPane;
    private javax.swing.JTextArea txtAreaLexico;
    private javax.swing.JTextArea txtAreaNotacionPolaca;
    private javax.swing.JTextArea txtAreaSemantico;
    private javax.swing.JTextArea txtAreaSintactico;
    private javax.swing.JTextArea txtCodigoOptimizado;
    private javax.swing.JLabel txtTiempoEjecucion;
    // End of variables declaration//GEN-END:variables

    public void analisis() {
        try {
            File file = crearArchivoConTexto(getTextFromSelectedTab());
            long inicioEjecucion = System.currentTimeMillis();
            an.AnalizarCodigo(new FileReader(file));
            long finEjecucion = System.currentTimeMillis();
            txtTiempoEjecucion.setText(((double) (finEjecucion - inicioEjecucion) / 1000) + " segundos");;
//            txtAreaLexico.setText(an.respuestaLexico);
//            if(an.respuestaSintactico.equals("")){
//                txtAreaSintactico.setText("Sin errores sintacticos");
//            }else{
//                txtAreaSintactico.setText(an.respuestaSintactico);
//            }
//            
//            txtAreaSemantico.setText(an.respuestaSemantico);
        } catch (FileNotFoundException ex) {
            Logger.getLogger(GUI.class.getName()).log(Level.SEVERE, null, ex);
            JOptionPane.showMessageDialog(null, "Error de analisis: " + ex);
        }
    }

    public void analisisSintactico() {

    }

    public void analisisSemantico() {
//        TokenAsignaciones sem = new TokenAsignaciones();
//        sem.checkAsing(TokenIzq, TokenAsig)
    }

    public File crearArchivoConTexto(String texto) {

        try {
            File file = new File("tmp/tmp.txt");
            FileWriter fw = new FileWriter(file);
            BufferedWriter bw = new BufferedWriter(fw);
            bw.write(texto);
            bw.close();
            return file;
        } catch (IOException ex) {
            JOptionPane.showMessageDialog(null, "Error al escribir en archivo TMP");
            return null;
        }

    }

    public void guardarComo() {
        try {
            JFileChooser fc = new JFileChooser();
            fc.showSaveDialog(null);
            fc.setFileSelectionMode(JFileChooser.FILES_AND_DIRECTORIES);
            textEditorPane pane = (extraObjects.textEditorPane) (tabbedPane.getSelectedComponent());
            pane.file = fc.getSelectedFile();
            if (pane.file == null) {
                return;
            }
//            JOptionPane.showMessageDialog(null, "changing name to " + pane.file.getName());
            tabbedPane.setTitleAt(tabbedPane.getSelectedIndex(), pane.file.getName());
//            JOptionPane.showMessageDialog(null, "changing name to " + tabbedPane.getTitleAt(tabbedPane.getSelectedIndex()));
            tabbedPane.repaint();
//            tabbedPane.updateUI();
            guardar();
        } catch (HeadlessException ex) {
            Logger.getLogger(GUI.class.getName()).log(Level.SEVERE, null, ex);
            JOptionPane.showMessageDialog(null, "Error en Guardar Como: " + ex);
        }
    }

    public void guardar() {
        textEditorPane pane = (extraObjects.textEditorPane) (tabbedPane.getSelectedComponent());
        File file = pane.file;
        if (file != null) {
            try {
                BufferedWriter bw = new BufferedWriter(new FileWriter(file));
                bw.write(pane.getTextArea());
                bw.close();
            } catch (IOException ex) {
                Logger.getLogger(GUI.class.getName()).log(Level.SEVERE, null, ex);
                JOptionPane.showMessageDialog(null, "Error en Guardar: " + ex);
            }
        } else {
            guardarComo();
        }
    }

    private void abrirArchivosEnCache() {

        try {
            File file = new File(URLFILEVENTANAS);
            FileReader fr = new FileReader(file);
            BufferedReader br = new BufferedReader(fr);
            String line;
            ArrayList<String> lineas = new ArrayList<>();
            while ((line = br.readLine()) != null) {

                lineas.add(line);
            }

            for (String linea : lineas) {
                nuevaPestaña(linea);
            }

        } catch (FileNotFoundException ex) {
            Logger.getLogger(GUI.class.getName()).log(Level.SEVERE, null, ex);
        } catch (IOException ex) {
            Logger.getLogger(GUI.class.getName()).log(Level.SEVERE, null, ex);
        }
    }

    private void guardarVentanasAbiertas() {
        try {
            File file = new File(URLFILEVENTANAS);
            FileWriter fw = new FileWriter(file);

            String files = "";
            for (int i = 0; i < tabbedPane.getTabCount(); i++) {
                textEditorPane pane = (textEditorPane) tabbedPane.getComponentAt(i);
                if (pane.file != null) {
                    files += pane.file.getAbsolutePath() + "\n";
                }
            }
            fw.write(files);
            fw.close();
        } catch (IOException ex) {
            Logger.getLogger(GUI.class.getName()).log(Level.SEVERE, null, ex);
            System.err.println("Error: " + ex);
        }
    }

    private String getText(String ruta) {
        String contenido = "";
        try {
            File file = new File(ruta);
            FileReader fr = new FileReader(file);
            BufferedReader br = new BufferedReader(fr);
            String txt;
            while ((txt = br.readLine()) != null) {
                contenido = contenido + txt + "\n";
            }
            return contenido;
        } catch (FileNotFoundException ex) {
            Logger.getLogger(GUI.class.getName()).log(Level.SEVERE, null, ex);
        } catch (IOException ex) {
            Logger.getLogger(GUI.class.getName()).log(Level.SEVERE, null, ex);
        }
        return null;
    }

    private String getText(File file) {
        String contenido = "";
        try {
            FileReader fr = new FileReader(file);
            BufferedReader br = new BufferedReader(fr);
            String txt;
            while ((txt = br.readLine()) != null) {
                contenido = contenido + txt + "\n";
            }
            return contenido;
        } catch (FileNotFoundException ex) {
            Logger.getLogger(GUI.class.getName()).log(Level.SEVERE, null, ex);
        } catch (IOException ex) {
            Logger.getLogger(GUI.class.getName()).log(Level.SEVERE, null, ex);
        }
        return null;
    }

    private String getArchiveNameFromUbication(String ruta) {
        File file = new File(ruta);
        return file.getName();
    }

    private textEditorPane nuevaPestaña() {
        textEditorPane pane = new textEditorPane();
        String nombre = "Nuevo Archivo";
        pane.name = nombre;
        int cont = 1;
        while (existArchivo(nombre)) {
//            JOptionPane.showMessageDialog(null, nombre);
            if (nombre.endsWith(cont + "")) {
                String[] split = nombre.split(cont + "");
                nombre = split[0];
                cont++;
            }
            nombre += cont;
        }
        tabbedPane.addTab(nombre, pane);
        int i = tabbedPane.indexOfTab(nombre);
        tabbedPane.setTabComponentAt(i, new Cross(tabbedPane.getTitleAt(i), this)); //agrega titulo y boton X.
//        getContentPane().add(tabbedPane, BorderLayout.CENTER);
//        int i = tabbedPane.indexOfTab(file.getName());
//        tabbedPane.setTabComponentAt(i, new Cross(tabbedPane.getTitleAt(i), tabbedPane)); //agrega titulo y boton X.
//        getContentPane().add(tabbedPane, BorderLayout.CENTER);
        return pane;
    }

    private textEditorPane nuevaPestaña(String ruta) {
        textEditorPane pane = new textEditorPane();
        File file = pane.file = new File(ruta);
        if (file.exists()) {
//            selectedFiles.add(file);
            pane.setTextArea(getText(file));
            tabbedPane.addTab(file.getName(), pane);
            int i = tabbedPane.indexOfTab(file.getName());
            tabbedPane.setTabComponentAt(i, new Cross(tabbedPane.getTitleAt(i), this)); //agrega titulo y boton X.
            getContentPane().add(tabbedPane, BorderLayout.CENTER);
        }

        return pane;
    }

    private textEditorPane nuevaPestaña(File file) {
        String codigo = getText(file);
        textEditorPane pane = new textEditorPane();
        pane.file = file;
        pane.setTextArea(codigo);
        tabbedPane.addTab(file.getName(), pane);
        int i = tabbedPane.indexOfTab(file.getName());
        tabbedPane.setTabComponentAt(i, new Cross(tabbedPane.getTitleAt(i), this)); //agrega titulo y boton X.
        getContentPane().add(tabbedPane, BorderLayout.CENTER);
        return pane;
    }

    private String getTextFromSelectedTab() {
        textEditorPane pane = (textEditorPane) tabbedPane.getSelectedComponent();
        return pane.getTextArea();
    }

    private void setTextToSelectedTab(String text) {
        textEditorPane pane = (textEditorPane) tabbedPane.getSelectedComponent();
        pane.setTextArea(text);
    }

    public JTabbedPane getTabbedPane() {
        return tabbedPane;
    }

    private boolean existArchivo(String nombre) {
        for (int i = 0; i < tabbedPane.getTabCount(); i++) {
            textEditorPane pane = (textEditorPane) tabbedPane.getComponentAt(i);
            if (pane.name != null && pane.name.equals(nombre)) {
                return true;
            }
            if (pane.file != null && pane.file.getName().equals(nombre)) {
                return true;
            }
        }
        return false;
    }
}
