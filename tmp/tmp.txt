import raptor_util_Print;
public class Miclase{
 /*fdjkslafjdskadfjdksalsfd*/
  //se pueden declarar constructores   
  private Ig(int pfd){
  
  }
  
  private Igf(int pfdds){
  
  }
  
  //se tiene un metodo principal, para colocar el codigo correspondiente a la programacion
  public void principalMain(){
     int a=1;
     float b=2;
     int c=3;
     int d=4;
     int e=5;
     If(a>=3 AND false){

     }
	 
	 //Potato es un lenguaje que pretende ser sencillo y facil de usar, esto se puede lograr
	 //a traves de una buena documentacion y de un buen manual de usuario, ademas de una buenta optimizacion del lenguaje
	 
     escribirEnConsola("Hola mundo desde Rex Raptor");
     int x=30;
     string y="hola";
     escribirEnConsola(x);
     int sss;
     sss = 2 / 5;
     int va = 10;
     int vb = 11;
     int vc = 12;
     int vd = 13;
     int ve = 14;
     float f=6;
     float g=7;
     float h=8;
     float i=9;
     float j=10;
     float k=11;
     int resultado = varA + 10;

     /*Mandamos a imprimir en consola*/
     escribirEnConsola(y);
     escribirEnConsola(z);
     int z=x+50;
     //string c;
     string[2] arreglo=("hola");
     boolean ssy = false;
     escribirEnConsola(z);
     
     //potato permite combinar ciclos con condicionales, y anidar diferentes funciones
     If(x>=5 AND true OR x==x){
		  char cara='s';
		  char carb='i';
		  char carc='n';
		  char card='o';
		  
          While(true){
               string s;
          }//Tambien se pueden colocar comentarios donde el usuario quiera sin ninguna restriccion y
           //sin alterar el funcionamiento del codigo
		   
          escribirEnConsola("X es mayor");
		  
          If(true){
               For(int i =0; i<=5;i++){
                    escribirEnConsola(z);
                    int vf = 10;
                    int vg = 11;
                    int vh = 12;
                    int vi = 13;
                    int vj = 14;
               }
          }
		  Else{
               float n;
               double l;
               int j;
               z=x+j+5*5434/44;
               float[5] arregloss=(3.6 + 2);
          }
     }

  }    

     //Se crea un metodo especifico para la funcion de escribir en una consola
     public void escribirEnConsola(char variable){
	 
		  //se tiene la funcion try-catch para poder evitar errores en el funcionamiento del codigo
          Try{
               escribirEnConsola(z);
			   string cade="hola mundo";
          }
		  Catch(Except e){
               escribirEnConsola(x);
               escribirEnConsola(y);
               escribirEnConsola(z);
          }
		  
		  //los switch son importantes porque ayudan a crear ahorrar espacio en lineas de codigo
		  //al colocar una sola funcion switch en lugar de varios if's anidados
          Switch vaz{
               Case 1:
                  escribirEnConsola(x);
               break;

               Case "a":
                  escribirEnConsola(y);
               break;

               Case 'b':
                  escribirEnConsola(f);
               break;
			   
               Default:
                  escribirEnConsola(p);
               break;
          }
     }
     
     /*se pueden utilizar argumentos en un metodo para utilizarlos dentro de las funciones de este*/
     public int sumarNumeros(int xxy, string yy){ 
          int ent = 4;
		  
		  //se pueden almacenar resultados de operaciones dentro de una variable
          float zz=x+ent;
		  
		  Switch ent{
               Case 1:
                  escribirEnConsola(x);
               break;

               Case 2:
                  escribirEnConsola(y);
               break;

               Case 3:
                  escribirEnConsola(f);
               break;
			   
               Default:
                  escribirEnConsola(p);
               break;
          }
		  
		  //Potato permite retornar valores de variable dentro de un metodo
          return z;
     }
     
}
